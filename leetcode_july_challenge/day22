Binary Tree Zigzag Level Order Traversal

#java solution

class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList();
        
        if(root == null) return result;
        
        TreeNode curr = root;
        Queue<TreeNode> queue = new LinkedList();
        int flag = 0;
        queue.add(curr);
        
        while(!queue.isEmpty()){
            Queue<TreeNode> temp = new LinkedList();
            List<Integer> list = new ArrayList();
            
            while(!queue.isEmpty()){
                TreeNode element = queue.poll();
                list.add(element.val);
                if(element.left != null) temp.add(element.left);
                if(element.right != null) temp.add(element.right);
            }
            
            if(flag == 1) Collections.reverse(list);
            flag ^= 1;
            result.add(list);
            while(!temp.isEmpty()) queue.add(temp.poll());
        }
        
        return result;
    }
}